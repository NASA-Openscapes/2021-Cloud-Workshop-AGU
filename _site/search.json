[
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Tutorials Overview",
    "section": "",
    "text": "These tutorials are a combination of narrative, links, code, and outputs. They have been developed for live-coding during the Hackathon, and are available for self-paced learning.\nTutorials are markdown (.md) and Jupyter (.ipynb) notebooks, and are available on GitHub:\nhttps://github.com/NASA-Openscapes/2021-Cloud-Hackathon/tree/main/tutorials."
  },
  {
    "objectID": "tutorials/00_Setup.html#step-1.-login-to-the-hub",
    "href": "tutorials/00_Setup.html#step-1.-login-to-the-hub",
    "title": "00. Setup for tutorials",
    "section": "Step 1. Login to the Hub",
    "text": "Step 1. Login to the Hub\nPlease go to https://openscapes.2i2c.cloud/hub/. Log in with your GitHub Account, and select ‚ÄúSmall‚Äù.\nAlternatively, you can also click this badge to launch the Hub:\n\n\n\n\n\n\n\n\n\n\nNote: It takes a few minutes for the Hub to load. Please be patient!\n\nWhile the Hub loads, we‚Äôll:\n\nDiscuss cloud environments\nSee how my Desktop is setup\nFork the Hackathon repository at github.com\nDiscuss python and conda environments\n\nThen, when the Hub is loaded, we‚Äôll get oriented in the Hub and clone the forked repository into our cloud environment."
  },
  {
    "objectID": "tutorials/00_Setup.html#discussion-cloud-environment",
    "href": "tutorials/00_Setup.html#discussion-cloud-environment",
    "title": "00. Setup for tutorials",
    "section": "Discussion: Cloud environment",
    "text": "Discussion: Cloud environment\nA brief overview about the NASA Openscapes Cloud Environment (following lessons from the Clinic).\n\nCloud infrastructure\n\nCloud: AWS us-west-2\n\nData: AWS S3 (cloud) and NASA DAAC data centers (on-prem).\nCloud compute environment: 2i2c Jupyterhub deployment\n\nIDE: JupyterLab"
  },
  {
    "objectID": "tutorials/00_Setup.html#discussion-my-desktop-setup",
    "href": "tutorials/00_Setup.html#discussion-my-desktop-setup",
    "title": "00. Setup for tutorials",
    "section": "Discussion: My desktop setup",
    "text": "Discussion: My desktop setup\nI‚Äôll screenshare to show and/or talk through how I have oriented the following software we‚Äôre using:\n\n2i2c Jupyterhub (our main workspace)\nHackathon Repo <> Hackathon Book (my teaching notes, your reference material)\nZoom Chat\nSlack"
  },
  {
    "objectID": "tutorials/00_Setup.html#step-2.-fork-the-hackathon-github-repository",
    "href": "tutorials/00_Setup.html#step-2.-fork-the-hackathon-github-repository",
    "title": "00. Setup for tutorials",
    "section": "Step 2. Fork the Hackathon GitHub repository",
    "text": "Step 2. Fork the Hackathon GitHub repository\n‚ÄúHow do I get the tutorial repository into the Hub?‚Äù. There are 2 steps. The first is from GitHub.com to fork the tutorial repository so that there is a connected copy in your user account that you can edit and push changes that won‚Äôt affect the nasa-openscapes copy.\nGo to https://github.com/nasa-openscapes/2021-Cloud-Hackathon and fork the repository.\n\nNote: if you‚Äôve already done this in the Pre-Hackathon Clinic, you‚Äôll need to make sure you have the latest, following the daily setup instructions."
  },
  {
    "objectID": "tutorials/00_Setup.html#discussion-python-and-conda-environments",
    "href": "tutorials/00_Setup.html#discussion-python-and-conda-environments",
    "title": "00. Setup for tutorials",
    "section": "Discussion: Python and Conda environments",
    "text": "Discussion: Python and Conda environments\nWhy Python?\n\n\n\nPython Data Stack. Source: Jake VanderPlas, ‚ÄúThe State of the Stack,‚Äù SciPy Keynote (SciPy 2015).\n\n\nDefault Python Environment:\nWe‚Äôve set up the Python environment with conda.\n\n\n\n\n\n\nConda environment\n\n\n\n\n\nname: openscapes\nchannels:\n  - conda-forge\ndependencies:\n  - python=3.9\n  - pangeo-notebook\n  - awscli~=1.20\n  - boto3~=1.19\n  - gdal~=3.3\n  - rioxarray~=0.8\n  - xarray~=0.19\n  - h5netcdf~=0.11\n  - netcdf4~=1.5\n  - h5py~=2.10\n  - geoviews~=1.9\n  - matplotlib-base~=3.4\n  - hvplot~=0.7\n  - pyproj~=3.2\n  - bqplot~=0.12\n  - geopandas~=0.10\n  - zarr~=2.10\n  - cartopy~=0.20\n  - shapely==1.7.1\n  - pyresample~=1.22\n  - joblib~=1.1\n  - pystac-client~=0.3\n  - s3fs~=2021.7\n  - ipyleaflet~=0.14\n  - sidecar~=0.5\n  - jupyterlab-geojson~=3.1\n  - jupyterlab-git\n  - jupyter-resource-usage\n  - ipympl~=0.6\n  - conda-lock~=0.12\n  - pooch~=1.5\n  - pip\n  - pip:\n    - tqdm\n    - harmony-py\n    - earthdata\n    - zarr-eosdis-store\n\n\n\n\nBash terminal and installed software\nLibraries that are available from the terminal\n\ngdal 3.3 commands ( gdalinfo, gdaltransform‚Ä¶)\nhdf5 commands ( h5dump, h5ls..)\nnetcdf4 commands (ncdump, ncinfo ‚Ä¶)\njq (parsing json files or streams from curl)\ncurl (fetch resources from the web)\nawscli (AWS API client, to interact with AWS cloud services)\nvim (editor)\ntree ( directory tree)\nmore ‚Ä¶\n\n\n\nUpdating the environment\nScientific Python is a vast space and we only included libraries that are needed in our tutorials. Our default environment can be updated to include any Python library that‚Äôs available on pip or conda.\nThe project used to create our default environment is called corn (as it can include many Python kernels).\nIf we want to update a library or install a whole new environment we need to open an issue on this repository. We can help your teams do this during project hacktime.\n\n\ncorn üåΩ"
  },
  {
    "objectID": "tutorials/00_Setup.html#step-3.-jupyterhub-orientation",
    "href": "tutorials/00_Setup.html#step-3.-jupyterhub-orientation",
    "title": "00. Setup for tutorials",
    "section": "Step 3. JupyterHub orientation",
    "text": "Step 3. JupyterHub orientation\nNow that the Hub is loaded, let‚Äôs get oriented.\n\n\n\n\nFirst impressions\n\nLauncher & the big blue button\n‚Äúhome directory‚Äù"
  },
  {
    "objectID": "tutorials/00_Setup.html#step-4.-clone-the-hackathon-github-repository",
    "href": "tutorials/00_Setup.html#step-4.-clone-the-hackathon-github-repository",
    "title": "00. Setup for tutorials",
    "section": "Step 4. Clone the Hackathon GitHub repository",
    "text": "Step 4. Clone the Hackathon GitHub repository\nNow we‚Äôll clone the GitHub repository, using a git extension for the JupyterHub. Go to your github account, and navigate to the repository that you just created by forking from the Openscapes repository.\nClick to copy the url for cloning the repository.\n\nNow, go to JupyterHub and click on the git extension in the left panel and then click the blue button ‚ÄúClone a Repository‚Äù.\n\nThen, paste the repository link to the forked repository that you copied from your github account into the ‚ÄúClone a repo‚Äù pop up window. Then click the blue ‚ÄúCLONE‚Äù button. It will take a few moments to clone the repository into your Hub.\nYour link should look like https://github.com/YOUR-USERNAME/2021-Cloud-Hackathon. For example, the link is https://github.com/virdi/2021-Cloud-Hackathon. Note that it include your github username in the repo link.\n\nAlternatively, you can use the terminal (command line) as per github workflows: first-time setup.\nOnce the repository is cloned, you will see a new directory in the ‚ÄúFile Browser‚Äù panel on the left named ‚Äú2021-Cloud-Hackathon‚Äù. In this directory, you have all hackathon material including the tutorials and this book to follow along during other Tutorials. You are all set.\n\n\nREMEMBER: This is your copy (or fork) of the hackathon materials and jupyter notebooks. So feel free to make any changes to the content of this repository."
  },
  {
    "objectID": "tutorials/00_Setup.html#jupyter-notebooks",
    "href": "tutorials/00_Setup.html#jupyter-notebooks",
    "title": "00. Setup for tutorials",
    "section": "Jupyter notebooks",
    "text": "Jupyter notebooks\nLet‚Äôs get oriented to Jupyter notebooks, which we‚Äôll use in all the tutorials."
  },
  {
    "objectID": "tutorials/00_Setup.html#how-do-i-end-my-session",
    "href": "tutorials/00_Setup.html#how-do-i-end-my-session",
    "title": "00. Setup for tutorials",
    "section": "How do I end my session?",
    "text": "How do I end my session?\n(Also see How do I end my Openscapes session? Will I lose all of my work?)\nWhen you are finished working for the day it is important to explicitly log out of your Openscapes session. The reason for this is it will save us a bit of money! When you keep a session active it uses up AWS resources and keeps a series of virtual machines deployed.\nStopping the server happens automatically when you log out, so navigate to ‚ÄúFile -> Log Out‚Äù and just click ‚ÄúLog Out‚Äù!\n!!! NOTE ‚Äúlogging out‚Äù - Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day."
  },
  {
    "objectID": "tutorials/00_Setup.html#step-5.-tracking-changes-optional",
    "href": "tutorials/00_Setup.html#step-5.-tracking-changes-optional",
    "title": "00. Setup for tutorials",
    "section": "Step 5. Tracking changes (Optional)",
    "text": "Step 5. Tracking changes (Optional)\nNow that you have forked and cloned the repository in your Hub, you can make changes (edit, add, and/or delete content) and track these files using git. In this step, we will provide an overview of how to use git using the graphical interface (the JupyterLab git extension).\n\nStep 5.1. Configure Git (git config)\nConfigure git with your name and email address as shown here.\ngit config --global user.name \"Makhan Virdi\"\ngit config --global user.email \"Makhan.Virdi@gmail.com\"\nOpen a new terminal: File >> New >> Terminal\n\nConfigure git to store your github credentials to avoid having to enter your github username and token each time you push changes to your repository(in Step 5.5, we will describe how to use github token instead of a password)\ngit config --global credential.helper store\n\n\nStep 5.2. Create a new file\nLet‚Äôs create a new file: In the left panel on your Hub, click on the ‚Äúdirectory‚Äù icon and then double click on ‚Äú2021-Cloud-Hackathon‚Äù directory. Then, create a new file using the text editor in your 2i2c JupyterHub (File >> New >> Text File). Add some text to this file, for example: A test file. Save this file and rename it to test.txt.\n\n\n\nStep 5.3. Track the changes to the new file (git add)\nClick the git icon in the left panel. You can see that the newly added file is in the ‚ÄúUntracked‚Äù section. You can click the + icon next to the file name to let git track this file for changes.\n\n\n\nStep 5.4. Commit the changes to the new file (git commit)\nNow, you will see that the file is Staged, which means that git is ready to take a snapshot of this file (and the repository) with the changes that you made. This snapshot is called a commit. To commit the changes, add a note (called a commit message) by typing in the text box that say ‚ÄúSummary‚Äù.\nNow, click the blue ‚ÄúCOMMIT‚Äù button to commit this change.\n\nNote: A short message indicating the type of change to this file is a good practice. Optionally, a longer description may be added to the ‚ÄúDescription‚Äù field.\n\n\n\n\nStep 5.5. Transmit committed changes to your github (git push) {#step-5.5.-transmit-committed-changes-to-your-github-(git-push}\nAt this stage, you have committed the changes to your git repository on your Hub. However, these changes are still on your Hub and needs to be transmitted to your repository on github (so that both the local copy on the JupyterHub and the remote copy on github are in sync).\nAs seen in the picture below, the git extension indicates (with an orange dot on the cloud icon) that it is ready to push your changes to the remote (remote = your repository on github.com). To push to github, click the cloud button with an up arrow (circled in red in the picture).\n\nThe git extension in the Hub will prompt you to enter your github.com credentials. Enter you github.com username and a Personal Access Token (DO NOT use your password). To create a Personal Access Token, visit https://github.com/settings/tokens/new and create a new token with the permission as per the image below and specify its validity for 90 days.\n\n\nIMPORTANT: You will see this token only once, so be sure to copy this. If you do not copy your token at this stage, you will need to generate a new token.\n\nOnce you generate the token, copy it and paste in the Hub window that prompted you to enter the ‚ÄúPersonal Access Token‚Äù.\n\nGit will show a message at the bottom right telling that the changes were ‚ÄúSuccessfully pushed‚Äù. Also, you will see that the ‚Äúcloud icon with an up arrow‚Äù no longer has an orange dot, indicating that there are no more committed changes to push to the remote (github.com).\n\nNote: You have configured git extension to store your credentials. You will not be prompted for your login/token again!\n\n\nThat‚Äôs all. You can use the same workflow (add > commit > push) for any other new or modified files!\n\n\nNote: If you are comfortable with the command line, you can use the Terminal (In Hub, New > Terminal) and follow the steps outlined in the Clinic section."
  },
  {
    "objectID": "logistics/schedule.html#hackathon-day-1-november-15",
    "href": "logistics/schedule.html#hackathon-day-1-november-15",
    "title": "Schedule",
    "section": "Hackathon Day 1: November 15",
    "text": "Hackathon Day 1: November 15\n_schedule-day1.md\n\nWelcome Day 1\nPlease see the CloudHackathon_Notes Google Doc:\n_welcome-day1.md\n\n\nClosing Day 1\n_closing-day1-on.md"
  },
  {
    "objectID": "logistics/schedule.html#hackathon-day-2-november-16",
    "href": "logistics/schedule.html#hackathon-day-2-november-16",
    "title": "Schedule",
    "section": "Hackathon Day 2: November 16",
    "text": "Hackathon Day 2: November 16\n_schedule-day2.md\n\nWelcome Day 2\n_welcome-day2-on.md\n\n\nClosing Day 2\n_closing-day1-on.md"
  },
  {
    "objectID": "logistics/schedule.html#hackathon-day-3-november-17",
    "href": "logistics/schedule.html#hackathon-day-3-november-17",
    "title": "Schedule",
    "section": "Hackathon Day 3: November 17",
    "text": "Hackathon Day 3: November 17\n_schedule-day3.md\n\nWelcome Day 3\n_welcome-day2-on.md\n\n\nClosing Day 3\n_closing-day1-on.md"
  },
  {
    "objectID": "logistics/schedule.html#hackathon-day-4-november-18",
    "href": "logistics/schedule.html#hackathon-day-4-november-18",
    "title": "Schedule",
    "section": "Hackathon Day 4: November 18",
    "text": "Hackathon Day 4: November 18\n_schedule-day4.md\n\nWelcome Day 4\n_welcome-day2-on.md\n\n\nClosing Day 4\n_closing-day1-on.md"
  },
  {
    "objectID": "logistics/schedule.html#hackathon-day-5-november-19",
    "href": "logistics/schedule.html#hackathon-day-5-november-19",
    "title": "Schedule",
    "section": "Hackathon Day 5: November 19",
    "text": "Hackathon Day 5: November 19\n_schedule-day5.md\n\nWelcome Day 5\n\nJupyterHub: Log in.\n\nLog into 2i2c at https://openscapes.2i2c.cloud/hub/. This takes a few minutes so please start this as soon we reconvene each day\n\nGroup Photo!\n\n\n\nWhat‚Äôs next\nSlides sharing about upcoming opportunities with the NASA Openscapes project.\n\n\nClosing Day 5\n_closing-day5.md"
  },
  {
    "objectID": "logistics/schedule.html#pre-hackathon-clinic-november-9",
    "href": "logistics/schedule.html#pre-hackathon-clinic-november-9",
    "title": "Schedule",
    "section": "Pre-Hackathon Clinic: November 9",
    "text": "Pre-Hackathon Clinic: November 9\nThis Clinic is optional and we will share a recording that participants can review ahead of time.\n_schedule-clinic.md"
  },
  {
    "objectID": "logistics/prerequisites.html#prerequisites",
    "href": "logistics/prerequisites.html#prerequisites",
    "title": "Prerequisites & help",
    "section": "Prerequisites",
    "text": "Prerequisites\nIf you would like to follow along hands-on during the Workshop, please do the following (20 minutes). All software is free.\n\nGitHub username\n\nCreate a GitHub account (if you don‚Äôt already have one) at https://github.com. Follow optional advice on choosing your username\nPlease provide your GitHub username here; this will allow us to add you to the cloud hackathon workspace.\nRemember your username and password; you will need to be logged in during the workshop!\n\nEarthdata Login account\n\nCreate an Earthdata Login account (if you don‚Äôt already have one) at https://urs.earthdata.nasa.gov\nRemember your username and password; you will need to be logged in during the workshop!\n\nZoom\n\nBe prepared to call into Zoom using the link provided in the Slack 2021-nasacloudhack-general Channel.\n\nGet comfortable\n\nConsider your computer set-up in advance, including an external monitor if possible. You will be following along in Jupyter Hub on your own computer while also watching an instructor live-code over Zoom (or equivalent), and will also want quick-access to Slack to ask for help and follow links."
  },
  {
    "objectID": "logistics/prerequisites.html#getting-help",
    "href": "logistics/prerequisites.html#getting-help",
    "title": "Prerequisites & help",
    "section": "Getting help",
    "text": "Getting help\nWe will use Zoom Chat as our main channel for help. Please use this to post questions and request a breakout room."
  },
  {
    "objectID": "logistics/github-workflows.html#first-time-setup",
    "href": "logistics/github-workflows.html#first-time-setup",
    "title": "GitHub workflows",
    "section": "First-Time Setup",
    "text": "First-Time Setup\n\nFork the hackathon repo\nGo to https://github.com/nasa-openscapes/2021-Cloud-Hackathon and fork the repository. This will enable you to you can edit your own copy and live-code with us\n\nNote: The term fork means that you are going to copy the project into your own user space in Github\n\n\n\n\nFork a copy\n\n\n\n\nClone your forked repo into JupyterHub\nOpen your terminal\ngit clone https://github.com/YOUR-USERNAME/2021-Cloud-Hackathon\ndon‚Äôt do all the credentials/token ‚Äî they don‚Äôt need push access to follow along with the tutorials. We can help them via Slack/breakouts when/if they need to push with tokens"
  },
  {
    "objectID": "logistics/github-workflows.html#daily-setup",
    "href": "logistics/github-workflows.html#daily-setup",
    "title": "GitHub workflows",
    "section": "Daily Setup",
    "text": "Daily Setup\nThe daily setup has 2 steps: get the latest into your forked copy of the repo, then get the latest of your fork into your JupyterHub.\nIf you have any conflicts with the following steps, you will likely need to commit your work, or clear your work if you don‚Äôt want to keep anything you‚Äôve done. See below for daily setup troubleshooting as well as Git update, revert, etc.\n\nGitHub: Update your fork\nFrom github.com Fetch and merge: Update your forked repo from main by clicking ‚ÄúFetch upstream‚Äù beneath the big green code button, and then the green ‚ÄúFetch and merge‚Äù button. You may have to refresh the page to see any recent activity.\n\n\n\nJupyterHub: Get your fork‚Äôs updates\nGo to https://openscapes.2i2c.cloud/hub/\nGo to the GitHub extension and click the ‚Äúpull button‚Äù\nIf you see\n\nYou‚Äôll need to decide if you want to keep or delete the changes you made yesterday. This will depend on the work you did and how important it was. If you‚Äôd like to delete it, please follow delete your local changes below, and then come back above and retype git status and git pull.\nIf you‚Äôd like to keep your changes, you‚Äôll need to commit them. You can press ‚ÄúCancel‚Äù and look at the files in the ‚ÄúChanged‚Äù category and you can hover over the file to inspect them (open, diff, discard, add) and if you‚Äôd like to add them, they will be staged and then you can commit them with a message.\nYou could also do the above in the terminal, making sure you are in the 2021-Cloud-Hackathon directory (double check with pwd and move with cd)\ngit status\ngit pull\n\n\nDaily setup troubleshooting\nNot a git repository - in your terminal if you see the following, you likely need to cd change directory into your GitHub folder.\nfatal: not a git repository (or any parent up to mount point /home)\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set)."
  },
  {
    "objectID": "logistics/github-workflows.html#git-update-revert-etc",
    "href": "logistics/github-workflows.html#git-update-revert-etc",
    "title": "GitHub workflows",
    "section": "Git: update, revert, etc",
    "text": "Git: update, revert, etc\nThese are some useful commands to revert/delete your local changes and update your fork with the most recent information from the main branch.\n\nDelete your local changes\nThere are several ways to delete your local changes if you were playing around and want to reset. Here are a few:\n\nUndo changes you‚Äôve maybe saved or committed, but not pushed\nThis is less time and internet intensive (no new clone/download).\nIf you‚Äôve got changes saved, but not yet staged, committed, or pushed, you‚Äôll delete unstaged changes in the working directory with clean:\nYou‚Äôll need to make sure you‚Äôre in the github repository (use pwd to check your present working directory and cd to change directory)\ngit clean -df\ngit checkout -- .\n\n\nBurn it all down\nYou‚Äôll delete the whole repo that you have locally, and then reclone.\nYou‚Äôll need to make sure you‚Äôre in the github repository (use pwd to check your present working directory and cd to change directory)\nrm -rf YOUR-REPO\nHere is a whole blog on how to go back in time (walk back changes), with conceptual diagrams, command line code, and screenshots from RStudio. https://ohi-science.org/news/github-going-back-in-time\n\n\n\nUpdate local branch with remote main branch\nIf while you‚Äôre working you would like to update your local your-branch with the most recent updates on the main branch on GitHub.com, there are several ways to do this. Here‚Äôs one.\ngit checkout your-branch\ngit fetch\ngit merge origin/main\n\n\nUpdate from main"
  },
  {
    "objectID": "logistics/github-workflows.html#project-hacktime-setup",
    "href": "logistics/github-workflows.html#project-hacktime-setup",
    "title": "GitHub workflows",
    "section": "Project Hacktime Setup",
    "text": "Project Hacktime Setup\nHere are some suggestions for collaborating with your project groups (and beyond!) using GitHub.\nThis means a combination of creating a place to collaborate (a github repository) and a shared workflow to contribute.\n\nCreate a repository on GitHub.com\nJust one person does this.\nYou can do this in one of your user/organization accounts, or ask someone from the Cloud Hackathon Team to create one for you in the NASA-Openscapes organization.\nHere are instructions for creating a repo on GitHub.com ‚Äî remember to make it public so that other hackathon folks can see and help!\n\n\nDiscuss edit access vs branches\nThe person who created the repo will manage the permission.\nThe simplest way to collaborate on GitHub is if everyone has permission to edit the repository directly through the main branch. Talk to your team ‚Äî folks that have experience using branches can do so but others can push changes directly to the main branch.\nHere are instructions for updating github repo permissions.\n\n\nClone repo into 2i2c\nEverybody does this.\nTo to the JupyterHub, go to your Terminal, then:\ngit clone https://github.com/USERNAME/REPOSITORY-NAME.\n\n\nCheck in as you push changes\nWhether you‚Äôre using branches or not, check in with each other as you push updates to avoid merge conflicts and have the latest progress.\nHere are instructions for a workflow with branches (optional).\n\n\nUploading files from your local computer to 2i2c\nDo this using the ‚ÄúUpload Files‚Äù button in JupyterHub in 2i2c, the UP arrow two over from the big blue + button."
  },
  {
    "objectID": "logistics/github-workflows.html#github-qa",
    "href": "logistics/github-workflows.html#github-qa",
    "title": "GitHub workflows",
    "section": "GitHub Q&A",
    "text": "GitHub Q&A\n\nWhen should I fork+clone instead of just clone?\nFrom Mike Gangl:\nA fork becomes ‚Äòindependent‚Äô of the repository you‚Äôre forking. So you control if/when you pull in changes. a clone on the other hand, will be linked to the original repository- so if you do ‚Äúpull‚Äù you‚Äôll get the changes from the parent repository as well.\nIf you plan on contributing to a project, a fork is usually the best way to do that, if you plan on simply consuming the project (e.g.¬†run a tutorial) then cloning is fine. A fork can always be appropriate.\nOr, if you plan on updating and making changes that you‚Äôd want to preserve, a fork allows you to do that in your own repository, whereas cloning would need you to have permissions to write (push) to the repository."
  },
  {
    "objectID": "logistics/index.html#for-hackathon-participants",
    "href": "logistics/index.html#for-hackathon-participants",
    "title": "Logistics overview",
    "section": "For Hackathon Participants",
    "text": "For Hackathon Participants\nBefore the hackathon, please complete the prerequisites and be prepared for the daily setup and be familiar with the ways of getting help."
  },
  {
    "objectID": "logistics/index.html#for-hackathon-helpers---a-mentors-guide",
    "href": "logistics/index.html#for-hackathon-helpers---a-mentors-guide",
    "title": "Logistics overview",
    "section": "For Hackathon Helpers - A Mentor‚Äôs Guide",
    "text": "For Hackathon Helpers - A Mentor‚Äôs Guide\nMentor = trainer = helper = any DAAC or Openscapes staff\n\nSlack\nChannels in Openscapes workspace\nUpdate your Slack name temporarily to include ‚Äúhelper‚Äù, e.g.¬†Catalina Oaida (Helper)\n\nMentors‚Äô/Helper channel - #nasa-daac-mentors1\n\nOur back channel to coordinate amongst ourselves\n\nGeneral channel - #2021-nasacloudhack-general\n\nAnnouncements, general questions and communications\n\nPitchfest channel - #2021-nasacloudhack-projects\n\nParticipants discuss project ideas\nUse slack direct message (DM) for team/project work\n\nHelp channel - #2021-nasacloudhack-help\n\nTroubleshooting, share screenshots, etc\nWhen you see a question you will reply to, please add the ‚Äúeyes‚Äù emoji below so other helpers know that you are looking into it. Then please reply in-thread in Slack to help. Can tag additional helpers if you need further support.\n\n\n\n\nGithub\nHackathon repo: https://github.com/NASA-Openscapes/2021-Cloud-Hackathon; any updates to the main branch will be updated in this book (via GitHub Action).\n\ntutorials folder\ntutorials-templates folder for live coding - same as tutorials but the code is removed and only markdown remains\nParticipants will create their own repos, we can link to their projects in the cloud hackathon repo to capture the hackathon projects artifacts\nWorking with the CH repo\n\nParticipants are instructed to fork the CH repo to their own github, then clone the CH repo. This way they can push any updates or changes to the CH repo within their own version of the repo without impacting the original CH repo\nThis should be covered in Tutorial 0.\n\nWhat happens to my work on 2i2c after the 3 months?\n\nCode: push to your own Github repo\nData and analysis outputs - working on S3 solution\n\nFrom Clinic chapter: ‚ÄúThis section is a step-by-step guide to set up git on your 2i2c instance and configure git to use your github.com account for managing your repositories hosted on github.com.‚Äù We are also looking into using Git Extension.\n\n\n\nZoom teleconference\n\nHost: Erin and Julie\nBreak-out rooms\n\nWe will set up Breakout rooms ahead of time, and have helpers ready to meet with participants. If there are many people in breakout rooms/lots of same issues, we‚Äôll pause the tutorial and address things together\nIf a participant is stuck and needs 1:1 help, ping one of the Zoom hosts in the mentor/general channel to place you in a breakout room with participant X\n\nChat - Encourage participants to use the Slack general or help channel for questions, not the Zoom chat\n\nErin will mention this in the Welcome (logistics) session beginning of Day 1\n\n\n\n\nTutorials workflow\n\nWelcome mentor share link to CH Book during Welcome each day\nWelcome mentor to instruct participant to spin up 2i2c JupyterHub if they haven‚Äôt done so that morning already\nTutorial presenters can also role-model having the CH Book open as a tab when they teach if they want to refer to it.\nTutorial presenter will be using template notebooks based on each tutorial\nTutorial presenter will live code, and participants will follow along in their instance\nTutorial presenter screen zoom level should be 130%\n\n\n\nHelpers support during ‚Äúlive coding‚Äù Tutorials Demos\n\nTutorial mentor live codes, participants follow along\nAll other helpers monitor Slack help (and general) channel for questions, people being stuck\n\nWhen you see a question you will reply to, please add the ‚Äúeyes‚Äù emoji below so other helpers know that you are looking into it. Then please reply in-thread in Slack to help. Can tag additional helpers if you need further support.\nIf needed, ask host to place you and participant in breakout room temporarily for easier help/support\n\nReminder: Update your Slack name temporarily to include ‚Äúhelper‚Äù, e.g.¬†‚ÄúCatalina Oaida (Helper)‚Äù\n\n\n\nHelper support during Team Hack Time\n\nZoom host - Place participants in breakout rooms based on their team\n\nCan collaborate in zoom breakout rooms and in their slack team DM (direct messaging)\n\nParticipants should post any team project questions in the help slack channel; screenshot are helpful\n\nParticipants can create a DM thread with their teammates for team work discussions\n\nMentors monitor the help slack channel for questions\n\nWhen you see a question you will reply to, please add the ‚Äúeyes‚Äù emoji below so other helpers know that you are looking into it. Then please reply in-thread in Slack to help. Can tag additional helpers if you need further support.\nand/or ask host to be added to the team zoom breakout room\n\nMentors use the mentor slack channel if you need additional help from a colleague\n\nThey can then also be added to zoom breakout room, as needed\n\nBeyond the scheduled time for Team Hack Time, the zoom meeting will close out, but participants are welcome to continue to discuss via their DM in slack\n\nNo on-call mentor support beyond the scheduled team hack time session\nAdditional help from mentors available 8-9am Tue-Fri during optional office hours\n\n\n\n\n2i2c JupyterHub\nLog-in before we start each day: https://openscapes.2i2c.cloud/hub/"
  },
  {
    "objectID": "logistics/jupyter-notebooks-hubs.html",
    "href": "logistics/jupyter-notebooks-hubs.html",
    "title": "2021 Cloud Hackathon",
    "section": "",
    "text": "Jupyter notebook question: is there a way to copy multiple cells at once and paste in a new notebook? (rather than having to go into each cell individually to copy that snippet of code) - while pressing shift, with the mouse or the arrow keys select the cells you want then you can press ‚ÄòC‚Äô or right click and copy the cells and then go to a different notebook and paste them. - to make this work you need to focus on the notebook not in a cell (press ESC if so)"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "2021 Cloud Workshop at AGU",
    "section": "Welcome",
    "text": "Welcome\n\nWelcome to the 2021 Cloud Workshop at AGU: Enabling Analysis in the Cloud Using NASA Earth Science Data, co-hosted by the NASA EOSDIS Physical Oceanography Distributed Active Archive Center (PO.DAAC), National Snow and Ice Data Center DAAC (NSIDC DAAC), Land Processes Distributed Active Archive Center (LP.DAAC), with support provided by ASDC DAAC, GES DISC, IMPACT, and NASA Openscapes.\nThe Cloud Workshop will take place virtually on December 12, 2021, from 8am-12pm CST (UTC-6) in AGU session SCIWS31. Registration is required."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "2021 Cloud Workshop at AGU",
    "section": "About",
    "text": "About\nThe 2021 Cloud Workshop at AGU: Enabling Analysis in the Cloud Using NASA Earth Science Data is a virtual half-day collaborative open science learning experience aimed at exploring, creating, and promoting effective cloud-based science and applications workflows using NASA Earthdata Cloud data, tools, and services (among others), in support of Earth science data processing and analysis in the era of big data."
  },
  {
    "objectID": "logistics/schedule.html#workshop-schedule",
    "href": "logistics/schedule.html#workshop-schedule",
    "title": "Schedule",
    "section": "Workshop Schedule",
    "text": "Workshop Schedule\n\n\n\nTime, CST (UTC-6)\nEvent\nLeads/Instructors\n\n\n\n\n8:00 am\nWelcome\nCatalina & Cyndi (?)\n\n\n8:15 am\nTutorial 0: Quick orientation 2i2c\nLuis (?)\n\n\n8:30 am\nTutorial 1: EarthData Search\n(?)\n\n\n9:15 am\nTutorial 2: EarthData Authentication\n(?)\n\n\n9:30 am\nBreak\n\n\n\n9:45 am\nTutorial 3: Direct S3 Access\nAaron (?)\n\n\n10:30 am\nTutorial 4: Cloud-non-cloud\nAMY (?)\n\n\n11:15 am\nQ&A\nAll\n\n\n11:45 am\nClosing (survey and next opportunities)\nJulie/Erin/Catalina (?)"
  },
  {
    "objectID": "logistics/prerequisites.html",
    "href": "logistics/prerequisites.html",
    "title": "2021 Cloud Hackathon",
    "section": "",
    "text": "Zoom Breakout Rooms\n\nDuring Tutorials Session\nIf you‚Äôd like to talk to someone and live-screenshare about your issue, please write in Zoom Chat that you need help and we will move you into a breakout room with a helper.\n\n\nDuring Team Hacktime\nDuring the team project time, you will be placed in a Zoom breakout room with your respective teammates to collaborate more easily. If you have questions as you work, post your question(s) in the Slack 2021-nasacloudhack-help Channel and a helper will respond in that thread. If needed, a helper can also join your team‚Äôs Zoom breakour room for easy screensharing, troubleshooting or to further discuss a question."
  },
  {
    "objectID": "logistics/index.html#for-workshop-participants",
    "href": "logistics/index.html#for-workshop-participants",
    "title": "Logistics overview",
    "section": "For Workshop Participants",
    "text": "For Workshop Participants\nBefore the workshop, please complete the prerequisites."
  }
]